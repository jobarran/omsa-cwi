generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tool {
  id          String    @id @default(uuid())
  code        String    @unique
  name        String
  brand       String?
  description String?
  state       ToolState @default(ACTIVE)
  quantity    Int       @default(1) // Tracking tool availability
  boughtAt    DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations - Up
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  // Relations - Down
  comments   Comment[]
  categories Category[]
  image      ToolImage[]
}

model ToolImage {
  id  String @id @default(uuid())
  url String

  // Relations - Up
  tool   Tool?   @relation(fields: [toolId], references: [id])
  toolId String?
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  rating    Int?
  createdAt DateTime @default(now())

  // Relations - Up
  user   User    @relation(fields: [userId], references: [id])
  userId String
  tool   Tool?   @relation(fields: [toolId], references: [id])
  toolId String?
}

model Project {
  id        String   @id @default(uuid())
  name      String
  address   String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations - Many to Many
  users User[] @relation("UserProjects")

  // Relations - Down
  tools  Tool[]
  status ProjectStatus  @default(PLANNING)
  image  ProjectImage[]
}

model ProjectImage {
  id  String @id @default(uuid())
  url String

  // Relations - Up
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
}

model User {
  id        String       @id @default(uuid())
  legajo    String       @unique
  company   Company      @default(CWI)
  name      String
  lastName  String
  email     String       @unique
  phone     String
  password  String
  createdAt DateTime     @default(now())
  status    UserStatus   @default(ACTIVE)
  category  UserCategory @default(N_A)

  // Relations - Down
  role        UserRole         @default(PROJECT_MANAGER)
  permissions UserPermission[] // Array of enum values
  actions     Record[]
  comments    Comment[]
  projects    Project[]        @relation("UserProjects")
  tools       Tool[]
  image       UserImage[]
  workerSkill WorkerSkill[]
}

model WorkerSkill {
  id   String @id @default(uuid())
  name String

  // Relations - Up
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model UserImage {
  id  String @id @default(uuid())
  url String

  // Relations - Up
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Record {
  id               String       @id @default(uuid())
  type             RecordType
  recordObject     RecordObject // New field to track the object type (TOOL, USER, etc.)
  recordTargetId   String // ID of the object being acted upon (could be Tool, User, etc.)
  recordTargetName String
  details          String? // Optional, to store additional info (like transfer details)
  createdAt        DateTime     @default(now())

  // Relations - Up
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Category {
  id   String @id @default(uuid())
  name String @unique

  // Relations - Down
  tools Tool[]
}

enum ToolState {
  ACTIVE
  ON_REPAIR
  INACTIVE
}

enum ProjectStatus {
  PLANNING
  IN_PROGRESS
  COMPLETED
  MAINTENANCE
}

enum UserRole {
  ADMIN
  PROJECT_MANAGER
  WORKER
}

enum Company {
  OMSA
  CWI
}

enum RecordObject {
  TOOL
  USER
  WORKER
  PROJECT
}

enum RecordType {
  CREATED
  UPDATED
  DELETED
  TRANSFERRED
  COMMENT_ADDED
  STATE_CHANGED
}

enum UserPermission {
  TOTAL
  TOOL_ADMIN
  TOOL_VIEW
  PEOPLE_ADMIN
  PEOPLE_VIEW
  PROJECT_ADMIN
  PROJECT_VIEW
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum UserCategory {
  N_A
  AYUDANTE
  MEDIO_OFICIAL
  OFICIAL
  OFICIAL_ESPECIALIZADO
  CAPATAZ
}
